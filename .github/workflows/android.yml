name: CJDK CI (Windows + Linux + Android)

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    name: Build & Test CJDK on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Set up CMake & NDK (Linux Only)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y cmake ninja-build
          echo "NDK_HOME=$ANDROID_NDK_HOME" >> $GITHUB_ENV

      - name: Set up CMake (Windows Only)
        if: matrix.os == 'windows-latest'
        run: choco install cmake --installargs 'ADD_CMAKE_TO_PATH=System'

      - name: Set up Gradle
        uses: gradle/gradle-build-action@v2

      - name: Grant execute permission for Gradle (Linux Only)
        if: matrix.os == 'ubuntu-latest'
        run: chmod +x gradlew

      - name: Build Java & C with Gradle
        run: ./gradlew assembleDebug

      - name: Run Java Unit Tests
        run: ./gradlew test

      - name: Run Native C Tests (if available)
        run: |
          if [ -f "CMakeLists.txt" ]; then
            mkdir -p build && cd build
            cmake ..
            make
            ctest --output-on-failure
          else
            echo "No CMakeLists.txt found, skipping native tests."
          fi

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Build Outputs (${{ matrix.os }})
          path: |
            app/build/outputs/apk/debug/app-debug.apk
            build/lib*.so
            build/*.dll
